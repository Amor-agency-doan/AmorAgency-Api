import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';
import { plainToClass, Transform, Type } from 'class-transformer';
import { IsArray, IsNotEmpty, IsOptional, IsString, ValidateNested } from 'class-validator';

class Option {
  @ApiProperty()
  @IsNotEmpty()
  @IsString()
  optionNo: string;

  @ApiProperty()
  @IsNotEmpty()
  @IsString()
  optionDetail: string;
}

class CreateQuestionDto {
  @ApiProperty({ type: Option, isArray: true })
  @ValidateNested()
  @Transform(({ value }) => value && plainToClass(Option, value))
  options: Option[];

  @ApiProperty({ type: String, isArray: true })
  answers: string[];

  @ApiProperty({ type: String, isArray: true })
  correctAnswer: string[];
}

class UpdateQuestionDto {
  @ApiProperty()
  @IsNotEmpty()
  @IsString()
  questionDetail: string;

  @ApiPropertyOptional()
  @IsOptional()
  fileName: string;

  @ApiProperty({ type: Option, isArray: true })
  @ValidateNested()
  @Transform(({ value }) => value && plainToClass(Option, value))
  options: Option[];

  @ApiProperty({ type: String, isArray: true })
  answers: string[];

  @ApiProperty({ type: String, isArray: true })
  correctAnswer: string[];
}

class DeleteQuestionDto {
  @ApiProperty()
  @IsNotEmpty()
  @IsArray()
  id: string[];
}
